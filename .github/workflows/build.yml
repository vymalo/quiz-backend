name: Build Docker

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-build:
    runs-on: ubuntu-latest

    name: Docker image build for ${{ matrix.name }}

    permissions:
      packages: write
      contents: read
    
    strategy:
      matrix: 
        target:
          - main
        include:
          - target: main
            name: "Main"
            suffix: ""
            dockerfile: "Dockerfile"
    
    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: '0'
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to the Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: string
        name: Lowercase the name
        uses: AsZc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_NAME }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{branch}}
            type=schedule,pattern={{date 'YYYYMMDD-hhmmss' tz='Europe/Berlin'}}
            type=semver,enable=true,priority=900,prefix=,suffix=,pattern=,value=
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-,enable={{is_default_branch}}
            type=sha,format=long
            type=sha,format=long,prefix={{branch}}
          flavor: |
            latest=auto
          images: '${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}${{ matrix.suffix }}'

      - name: Cache Docker layers
        uses: actions/cache@v4
        if: always()
        with:
          path: /tmp/.buildx-cache
          key: ${{ matrix.target }}-${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ matrix.target }}-${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v6
        if: github.event_name != 'pull_request'
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: 'true'
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          provenance: true
          sbom: true
